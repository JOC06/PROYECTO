# -*- coding: utf-8 -*-
"""Proyecto_parcial3Â°.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13tzXDY6jc3gzNbezOGJyTkLqSUMNshxj
"""

import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
import numpy as np


np.random.seed(42)
X = 2 * np.random.rand(1000, 1)
y = 4 + 3 * X + np.random.randn(1000, 1)


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)


model = Sequential()
model.add(Dense(1, input_dim=1, activation='linear'))


model.compile(loss='mean_squared_error', optimizer='adam', metrics=['mse'])


model.fit(X_train_scaled, y_train, epochs=50, batch_size=32, validation_data=(X_test_scaled, y_test))


loss, mse = model.evaluate(X_test_scaled, y_test)
print(f'Loss: {loss}, Mean Squared Error: {mse}')


predictions = model.predict(X_test_scaled)